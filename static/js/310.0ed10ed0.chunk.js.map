{"version":3,"file":"static/js/310.0ed10ed0.chunk.js","mappings":"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","sources":["components/MoviesGalleryItem/MoviesGalleryItem.styled.js","components/MoviesGalleryItem/MoviesGalleryItem.jsx","components/MoviesGallery/MoviesGallery.styled.js","components/MoviesGallery/MoviesGallery.jsx","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MovieListItem = styled.li`\n  background-color: #50c878;\n\n  border-radius: 5px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2);\n  overflow: hidden;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\n\nexport const MovieLink = styled(Link)`\n  cursor: pointer;\n  text-decoration: none;\n\n  img {\n    display: block;\n    height: 445px;\n    object-fit: cover;\n  }\n\n  p {\n    padding: 4px 8px;\n    color: white;\n    text-transform: uppercase;\n    text-align: center;\n  }\n`;\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { MovieListItem, MovieLink } from './MoviesGalleryItem.styled';\n\nconst MoviesGalleryItem = ({ id, posterPath, overview, title, pathTo }) => {\n  const location = useLocation();\n\n  return (\n    <MovieListItem>\n      <MovieLink to={`${pathTo}${id}`} state={location}>\n        <img src={posterPath} alt={overview} />\n        <p>{title}</p>\n      </MovieLink>\n    </MovieListItem>\n  );\n};\n\n\nMoviesGalleryItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  posterPath: PropTypes.string.isRequired,\n  overview: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  pathTo: PropTypes.string.isRequired,\n};\n\nexport default MoviesGalleryItem;\n","import styled from \"styled-components\";\n\nexport const MoviesList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  grid-gap: 20px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 15px 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;","import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport MoviesGalleryItem from 'components/MoviesGalleryItem/MoviesGalleryItem';\nimport { MoviesList } from './MoviesGallery.styled';\n\nconst MoviesGallery = ({ movies, pathTo }) => {\n  return (\n    <MoviesList>\n      {movies.map(({ id, title, poster_path, overview }) => {\n        let posterPath = '';\n\n        if (poster_path) {\n          posterPath = `https://image.tmdb.org/t/p/w400/${poster_path}`;\n        } else {\n          posterPath =\n            'https://cdn.pixabay.com/photo/2012/04/18/23/29/film-38241_960_720.png';\n        }\n\n        return (\n          <MoviesGalleryItem\n            key={id}\n            id={id}\n            posterPath={posterPath}\n            overview={overview}\n            title={title} \n            pathTo={pathTo}           \n          />\n        );\n      })}\n    </MoviesList>\n  );\n};\n\nMoviesGallery.propTypes = {\n  movies: PropTypes.array,\n  pathTo: PropTypes.string.isRequired,\n};\n\nexport default MoviesGallery;\n","import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n  display: inline-flex;\n  gap: 4px;\n  margin-top: 12px;\n  margin-left: 12px;\n`;\n\nexport const Input = styled.input`\n  padding: 10px 20px;\n  font-size: 16px;\n  border-radius: 12px;\n  font-family: inherit;\n  border: 1px solid rgb(80, 200, 120);\n  outline: none;\n\n  &:hover,\n  &:focus {\n    border: 1px solid #08140c;\n  }\n`;\n\nexport const SubmitBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgb(80, 200, 120);\n  color: white;\n  text-decoration: none;\n  font-size: 16px;\n  font-family: inherit;\n  border-radius: 12px;\n  padding: 10px 20px;\n  border: 1px solid white;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    background-color: white;\n    color: rgb(80, 200, 120);\n    border: 1px solid rgb(80, 200, 120);\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { VscSearch } from 'react-icons/vsc';\nimport { toast } from 'react-toastify';\nimport { fetchMoviesBySearch } from 'services/api';\nimport Loader from 'components/Loader/Loader';\nimport MoviesGallery from 'components/MoviesGallery/MoviesGallery';\nimport { SearchForm, Input, SubmitBtn } from './Movies.styled';\nconst Movies = () => {\n  const [searchWord, setSearchWord] = useState('');\n  const [movies, setMovie] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (query === '') return;\n    setLoading(true);\n\n    const getMoviesBySearch = async query => {\n      try {\n        const response = await fetchMoviesBySearch(query);\n\n        if (response.length < 1) {\n          toast.warn('Sorry,we can not find it! Please try again!');\n        }\n\n        setMovie(response);\n        setLoading(false);\n      } catch (error) {\n        toast.error(\n          'Sorry for the inconvenience! Please try to use our service in a few minutes!'\n        );\n      }\n    };\n    getMoviesBySearch(query);\n  }, [query]);\n\n  const handleChange = e => setSearchWord(e.target.value.toLowerCase());\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!searchWord) {\n      toast.warn('Sorry,we can not find it! Please try again!');\n    }\n\n    setSearchParams(searchWord !== '' ? { query: searchWord } : {});\n    reset();\n  };\n\n  const reset = () => setSearchWord('');\n\n  return (\n    <>\n      <SearchForm onSubmit={handleSubmit}>\n        <Input\n          type=\"text\"\n          autoComplete=\"off\"\n          placeholder=\"Search movies...\"\n          name=\"input\"\n          value={searchWord}\n          onChange={handleChange}\n        />\n        <SubmitBtn type=\"submit\">\n          <VscSearch size={20} />{' '}\n          <span style={{ marginLeft: '4px' }}>Search</span>\n        </SubmitBtn>\n      </SearchForm>\n      <>\n        {loading && <Loader />}\n        {!loading && movies.length > 0 && (\n          <MoviesGallery movies={movies} pathTo={''} />\n        )}\n      </>\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst KEY = 'f1b9f490c3f9fd9cec22fc21dcac3bcf';\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\n\nexport async function fetchPopularMovies() {\n  const response = await axios.get(`/trending/movie/day?api_key=${KEY}`);\n  return await response.data.results;\n}\n\nexport async function fetchMovieById(movieId) {\n  const response = await axios.get(`/movie/${movieId}?api_key=${KEY}&language=en-US`);\n  return await response.data;\n}\n\nexport async function fetchMovieCast(movieId) {\n  const response = await axios.get(`/movie/${movieId}/credits?api_key=${KEY}&language=en-US`);\n  return await response.data;\n}\n\nexport async function fetchMovieReviews(movieId) {\n  const response = await axios.get(`/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`);\n  return await response.data.results;\n}\n\nexport async function fetchMoviesBySearch(searchWord) {\n  const response = await axios.get(`search/movie?api_key=${KEY}&query=${searchWord}&language=en-US&page=1&include_adult=false`);\n  return await response.data.results;\n}\n\n// https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\n"],"names":["MovieListItem","styled","MovieLink","Link","id","posterPath","overview","title","pathTo","location","useLocation","to","state","src","alt","MoviesList","movies","map","poster_path","SearchForm","Input","SubmitBtn","useState","searchWord","setSearchWord","setMovie","loading","setLoading","useSearchParams","searchParams","setSearchParams","query","get","useEffect","getMoviesBySearch","fetchMoviesBySearch","response","length","toast","reset","onSubmit","e","preventDefault","type","autoComplete","placeholder","name","value","onChange","target","toLowerCase","size","style","marginLeft","Loader","MoviesGallery","KEY","fetchPopularMovies","axios","data","results","fetchMovieById","movieId","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}